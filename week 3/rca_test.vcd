$date
	Fri Aug 23 15:18:21 2024
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module tb $end
$var wire 4 ! o [3:0] $end
$var wire 1 " cout $end
$var reg 1 # cin $end
$var reg 1 $ clk $end
$var reg 4 % i0 [3:0] $end
$var reg 4 & i1 [3:0] $end
$var reg 1 ' reset $end
$var integer 32 ( i [31:0] $end
$scope module u0 $end
$var wire 4 ) a [3:0] $end
$var wire 4 * b [3:0] $end
$var wire 1 # cin $end
$var wire 4 + sum [3:0] $end
$var wire 1 " cout $end
$var wire 3 , c [2:0] $end
$scope module u0 $end
$var wire 1 - A $end
$var wire 1 . B $end
$var wire 1 # C $end
$var wire 1 / sum $end
$var wire 1 0 carry $end
$var wire 1 1 W2 $end
$var wire 1 2 W1 $end
$var wire 1 3 C1 $end
$scope module HA1 $end
$var wire 1 - A $end
$var wire 1 . B $end
$var wire 1 2 sum $end
$var wire 1 1 carry $end
$scope module A1 $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 1 y $end
$upscope $end
$scope module X1 $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 2 y $end
$upscope $end
$upscope $end
$scope module HA2 $end
$var wire 1 2 A $end
$var wire 1 # B $end
$var wire 1 / sum $end
$var wire 1 3 carry $end
$scope module A1 $end
$var wire 1 2 a $end
$var wire 1 # b $end
$var wire 1 3 y $end
$upscope $end
$scope module X1 $end
$var wire 1 2 a $end
$var wire 1 # b $end
$var wire 1 / y $end
$upscope $end
$upscope $end
$scope module OG $end
$var wire 1 1 a $end
$var wire 1 3 b $end
$var wire 1 0 y $end
$upscope $end
$upscope $end
$scope module u1 $end
$var wire 1 4 A $end
$var wire 1 5 B $end
$var wire 1 6 C $end
$var wire 1 7 sum $end
$var wire 1 8 carry $end
$var wire 1 9 W2 $end
$var wire 1 : W1 $end
$var wire 1 ; C1 $end
$scope module HA1 $end
$var wire 1 4 A $end
$var wire 1 5 B $end
$var wire 1 : sum $end
$var wire 1 9 carry $end
$scope module A1 $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 9 y $end
$upscope $end
$scope module X1 $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 : y $end
$upscope $end
$upscope $end
$scope module HA2 $end
$var wire 1 : A $end
$var wire 1 6 B $end
$var wire 1 7 sum $end
$var wire 1 ; carry $end
$scope module A1 $end
$var wire 1 : a $end
$var wire 1 6 b $end
$var wire 1 ; y $end
$upscope $end
$scope module X1 $end
$var wire 1 : a $end
$var wire 1 6 b $end
$var wire 1 7 y $end
$upscope $end
$upscope $end
$scope module OG $end
$var wire 1 9 a $end
$var wire 1 ; b $end
$var wire 1 8 y $end
$upscope $end
$upscope $end
$scope module u2 $end
$var wire 1 < A $end
$var wire 1 = B $end
$var wire 1 > C $end
$var wire 1 ? sum $end
$var wire 1 @ carry $end
$var wire 1 A W2 $end
$var wire 1 B W1 $end
$var wire 1 C C1 $end
$scope module HA1 $end
$var wire 1 < A $end
$var wire 1 = B $end
$var wire 1 B sum $end
$var wire 1 A carry $end
$scope module A1 $end
$var wire 1 < a $end
$var wire 1 = b $end
$var wire 1 A y $end
$upscope $end
$scope module X1 $end
$var wire 1 < a $end
$var wire 1 = b $end
$var wire 1 B y $end
$upscope $end
$upscope $end
$scope module HA2 $end
$var wire 1 B A $end
$var wire 1 > B $end
$var wire 1 ? sum $end
$var wire 1 C carry $end
$scope module A1 $end
$var wire 1 B a $end
$var wire 1 > b $end
$var wire 1 C y $end
$upscope $end
$scope module X1 $end
$var wire 1 B a $end
$var wire 1 > b $end
$var wire 1 ? y $end
$upscope $end
$upscope $end
$scope module OG $end
$var wire 1 A a $end
$var wire 1 C b $end
$var wire 1 @ y $end
$upscope $end
$upscope $end
$scope module u3 $end
$var wire 1 D A $end
$var wire 1 E B $end
$var wire 1 F C $end
$var wire 1 G sum $end
$var wire 1 " carry $end
$var wire 1 H W2 $end
$var wire 1 I W1 $end
$var wire 1 J C1 $end
$scope module HA1 $end
$var wire 1 D A $end
$var wire 1 E B $end
$var wire 1 I sum $end
$var wire 1 H carry $end
$scope module A1 $end
$var wire 1 D a $end
$var wire 1 E b $end
$var wire 1 H y $end
$upscope $end
$scope module X1 $end
$var wire 1 D a $end
$var wire 1 E b $end
$var wire 1 I y $end
$upscope $end
$upscope $end
$scope module HA2 $end
$var wire 1 I A $end
$var wire 1 F B $end
$var wire 1 G sum $end
$var wire 1 J carry $end
$scope module A1 $end
$var wire 1 I a $end
$var wire 1 F b $end
$var wire 1 J y $end
$upscope $end
$scope module X1 $end
$var wire 1 I a $end
$var wire 1 F b $end
$var wire 1 G y $end
$upscope $end
$upscope $end
$scope module OG $end
$var wire 1 H a $end
$var wire 1 J b $end
$var wire 1 " y $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
b0 ,
b0 +
b0 *
b0 )
b0 (
1'
b0 &
b0 %
0$
0#
0"
b0 !
$end
#50
1$
#100
0$
#125
0'
#150
1$
#160
b1 (
#200
0$
#250
1$
#260
b1 !
b1 +
1/
b10 (
1#
#300
0$
#350
1$
#360
17
16
b1 ,
10
11
1-
1.
b10 !
b10 +
0/
b11 (
b1 %
b1 )
b1 &
b1 *
0#
#400
0$
#450
1$
#460
b11 !
b11 +
1/
b100 (
1#
#500
0$
#550
1$
#560
07
1?
06
1>
00
b10 ,
18
01
19
0-
14
0.
15
b100 !
b100 +
0/
b101 (
b10 %
b10 )
b10 &
b10 *
0#
#600
0$
#650
1$
#660
b101 !
b101 +
1/
b110 (
1#
#700
0$
#750
1$
#760
1"
12
1H
1D
1.
1E
b101 !
b101 +
1/
b111 (
b1010 %
b1010 )
b1011 &
b1011 *
0#
#800
0$
#850
1$
#860
17
16
b11 ,
10
13
b110 !
b110 +
0/
b1000 (
1#
#900
0$
#950
1$
#960
1G
1F
07
1@
06
1A
b110 ,
00
1<
1=
03
b1101 !
b1101 +
1/
b1001 (
b1110 %
b1110 )
b1111 &
b1111 *
0#
#1000
0$
#1050
1$
#1060
17
16
b111 ,
10
13
b1110 !
b1110 +
0/
b1010 (
1#
#1100
0$
#1150
1$
#1200
0$
#1250
1$
#1300
0$
#1350
1$
#1400
0$
#1450
1$
#1500
0$
#1550
1$
#1600
0$
#1650
1$
#1700
0$
#1750
1$
#1800
0$
#1850
1$
#1900
0$
#1950
1$
#2000
0$
#2050
1$
#2060
