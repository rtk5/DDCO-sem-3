$date
	Wed Nov 20 15:18:52 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module Testbench $end
$var wire 8 ! read_data [7:0] $end
$var reg 8 " A [7:0] $end
$var reg 8 # B [7:0] $end
$var reg 1 $ clk $end
$var reg 2 % opcode [1:0] $end
$var reg 3 & read_addr [2:0] $end
$var reg 3 ' write_addr [2:0] $end
$var reg 1 ( write_enable $end
$scope module uut $end
$var wire 8 ) A [7:0] $end
$var wire 8 * B [7:0] $end
$var wire 1 $ clk $end
$var wire 2 + opcode [1:0] $end
$var wire 3 , read_addr [2:0] $end
$var wire 3 - write_addr [2:0] $end
$var wire 1 ( write_enable $end
$var wire 8 . read_data [7:0] $end
$var wire 8 / alu_result [7:0] $end
$scope module alu $end
$var wire 8 0 A [7:0] $end
$var wire 8 1 B [7:0] $end
$var wire 2 2 opcode [1:0] $end
$var reg 8 3 result [7:0] $end
$upscope $end
$scope module reg_file $end
$var wire 1 $ clk $end
$var wire 3 4 read_addr [2:0] $end
$var wire 3 5 write_addr [2:0] $end
$var wire 8 6 write_data [7:0] $end
$var wire 1 ( write_enable $end
$var reg 8 7 read_data [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 7
b10001000 6
b0 5
b0 4
b10001000 3
b0 2
b10101010 1
b11001100 0
b10001000 /
bx .
b0 -
b0 ,
b0 +
b10101010 *
b11001100 )
1(
b0 '
b0 &
b0 %
0$
b10101010 #
b11001100 "
bx !
$end
#5
b10001000 !
b10001000 .
b10001000 7
1$
#10
0$
0(
#15
1$
#20
bx !
bx .
bx 7
b11101110 /
b11101110 3
b11101110 6
0$
b1 &
b1 ,
b1 4
1(
b1 '
b1 -
b1 5
b1 %
b1 +
b1 2
#25
b11101110 !
b11101110 .
b11101110 7
1$
#30
0$
0(
#35
1$
#40
bx !
bx .
bx 7
b1110111 /
b1110111 3
b1110111 6
0$
b10 &
b10 ,
b10 4
1(
b10 '
b10 -
b10 5
b10 %
b10 +
b10 2
#45
b1110111 !
b1110111 .
b1110111 7
1$
#50
0$
0(
#55
1$
#60
bx !
bx .
bx 7
b10001 /
b10001 3
b10001 6
0$
b11 &
b11 ,
b11 4
1(
b11 '
b11 -
b11 5
b11 %
b11 +
b11 2
#65
b10001 !
b10001 .
b10001 7
1$
#70
0$
0(
#75
1$
#80
0$
#85
1$
#90
0$
